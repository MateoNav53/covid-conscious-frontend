{"version":3,"sources":["services/AuthService.js","context/AuthContext.js","components/navbar.js","components/login.js","components/Message.js","components/register.js","components/home.js","components/addLog.js","services/LogService.js","components/LogList.js","components/CovidFAQ.js","route-permissions/PublicRestricted.js","route-permissions/MemberRestricted.js","App.js","serviceWorker.js","index.js"],"names":["user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","AuthContext","createContext","children","useState","setUser","setIsAuthenticated","useEffect","AuthService","Provider","value","Navbar","useContext","logoutUser","success","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","id","to","onClick","Login","props","password","authContext","error","setError","action","onSubmit","e","preventDefault","console","log","target","document","querySelector","history","push","catch","x","htmlFor","placeholder","name","onChange","required","alertStyle","baseClass","message","errorMessage","Message","role","messagBody","Register","fullname","email","setMessage","timerID","useRef","clearTimeout","setTimeout","Home","AddLog","logDate","Date","location","duration","interactions","fullLog","setFullLog","useHistory","selected","axios","post","reset","go","date","maxDate","minDate","subDays","LogList","logTable","setLogTable","GetContext","interactionsCount","LogService","logs","sort","a","b","forEach","d","setDate","getDate","toISOString","current","scope","map","key","_id","substring","filter","delete","deleteLog","CovidFaq","PublicRestricted","Component","component","rest","render","pathname","state","from","MemberRestricted","App","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa5f0c3d.chunk.js","sourcesContent":["export default {\n    login : user =>{\n        return fetch('https://covid-conscious.herokuapp.com/user/login',{\n            method : \"post\",\n            body : JSON.stringify(user),\n            headers : {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'token'\n            }\n        }).then(res => {\n            if(res.status !== 401)\n                return res.json().then(data => data);\n            else\n                return { isAuthenticated : false, user : {username : \"\"}};\n        })\n    },\n    register : user =>{\n        return fetch('https://covid-conscious.herokuapp.com/user/register',{\n            method : \"post\",\n            body : JSON.stringify(user),\n            headers : {\n                'Content-Type' : 'application/json'\n            }\n        }).then(res => res.json())\n          .then(data => data);\n    },\n    logout : () => {\n        return fetch('https://covid-conscious.herokuapp.com/user/logout')\n                .then(res => res.json())\n                .then(data => data);\n    },\n    isAuthenticated: () => {\n        return fetch('https://covid-conscious.herokuapp.com/user/authenticated', {\n            headers : {\n                'Content-Type' : 'application/json',\n                'Accept': 'application/json',\n            }\n        })\n            .then(res=>{\n                if(res.status !== 401)\n                    return res.json().then(data => data)\n                else\n                    return {isAuthenticated: false, user: {username: \"\"}};\n            })\n    }\n}","import React, {createContext, useState, useEffect} from 'react';\nimport AuthService from '../services/AuthService';\n\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            setUser(data.user)\n            setIsAuthenticated(data.isAuthenticated)\n        });\n    }, []);\n\n    return (\n        <div>\n            <AuthContext.Provider value={{user, setUser, isAuthenticated, setIsAuthenticated}}>\n                {children}\n            </AuthContext.Provider>\n        </div>\n    )\n}","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../services/AuthService';\nimport {AuthContext} from '../context/AuthContext';\n\n\nfunction Navbar() {\n    const {isAuthenticated, user, setIsAuthenticated, setUser} = useContext(AuthContext)\n\n    const logoutUser = () => {\n        AuthService.logout().then(data => {\n            if(data.success){\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        })\n    }\n\n    const unauthenticatedNav = () => {\n        return(\n            <>\n                <li className=\"navbar-item\">\n                    <Link to='/'>\n                        Home\n                    </Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to='/login'>\n                        Login\n                    </Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to='/register'>\n                        Register\n                    </Link>\n                </li>\n            \n                <li className=\"navbar-item\">\n                    <Link to='/covidfaq'>\n                        COVID FAQ\n                    </Link>\n                </li>\n            </>\n        )\n    }\n    const authenticatedNav = () => {\n        return(\n            <>\n                <li className=\"navbar-item\">\n                    <Link to='/'>\n                        Home\n                    </Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to='/addlog'>\n                        Add Log\n                    </Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to='/loglist'>\n                        View {user.username}'s Logs\n                    </Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to='/covidfaq'>\n                        COVID FAQ\n                    </Link>\n                </li>\n                <Link to='/'>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={logoutUser}>Logout</button>\n                </Link>\n            </>\n        )\n    }\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-primary sticky-top\">\n            <a href=\"/\" className=\"brand mb-auto\">               \n                Covid Conscious  \n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#link_targets\" aria-controls=\"link_targets\" aria-expanded=\"false\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"link_targets\">\n                <ul className=\"nav-links navbar-nav navbar-brand ml-auto\">\n                    {!isAuthenticated ? unauthenticatedNav() : authenticatedNav()}\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React, {useState, useContext} from 'react';\nimport AuthService from '../services/AuthService';\nimport {AuthContext} from '../context/AuthContext';\n\nfunction Login(props) {\n\n    const [user, setUser] = useState({\n        username: \"\",\n        password: \"\",\n    })\n    const authContext = useContext(AuthContext);\n    const [error, setError] = useState('')\n\n    const submitLogin = (e) => {\n        e.preventDefault()\n        console.log('TARGETVALUE', e.target.value, document.querySelector('[name=username]').value, document.querySelector('[name=password]').value);\n        setUser({\n            username: document.querySelector('[name=username]').value,\n            password: document.querySelector('[name=password]').value\n        });\n        AuthService.login(user).then(data=>{\n            console.log(data)\n            const {isAuthenticated, user} = data;\n            if(isAuthenticated){\n                authContext.setUser(user);\n                authContext.setIsAuthenticated(isAuthenticated);\n                setError('')\n                props.history.push('/loglist');\n            }\n            else{\n                setError('Incorrect credentials, please re-enter');\n            }\n        }).catch( x => console.log('ERROR', x));\n\n    }\n\n    return(\n        <div>\n            <form action=\"\" method=\"post\" className=\"col-md-8 offset-md-2\" onSubmit={submitLogin}>\n                <h1 className=\"form-group page-header\">Login</h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\" placeholder=\"Enter username\" value={user.username||\"\"} name=\"username\" onChange={e => setUser({...user, username: e.target.value})} id=\"username\" className=\"form-control\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" placeholder=\"Enter password\" value={user.password||\"\"} name=\"password\" onChange={e => setUser({...user, password: e.target.value})} id=\"password\" className=\"form-control\" required></input>\n                </div>\n                <button type=\"submit\" className=\"btn btn-warning\">Login</button>\n                {error ? <div className=\"alert alert-danger\">{error}</div> : null}\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\n\nconst alertStyle = (props) => {\n    let baseClass = \"alert \";\n    if(props.message.errorMessage)\n        baseClass = baseClass + \"alert-danger\";\n    else\n        baseClass = baseClass + \"alert-primary\";\n    \n    return baseClass + \" text-center\"\n}\n\nconst Message = props => {\n    return(\n        <div className={alertStyle(props)} role=\"alert\">\n            {props.message.messagBody}\n        </div>\n    )\n}\n\nexport default Message;","import React, {useState, useRef, useEffect} from 'react';\nimport AuthService from '../services/AuthService';\nimport Message from '../components/Message';\n\nfunction Register(props) {\n    const [user, setUser] = useState({\n        username: \"\",\n        fullname: \"\",\n        email: \"\",\n        password: \"\",\n    })\n    const [message, setMessage] = useState('');\n    let timerID = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timerID)\n        };\n    }, [])\n\n    const clearForm = () => {\n        setUser({\n            username: \"\",\n            fullname: \"\",\n            email: \"\",\n            password: \"\",\n        });\n    }\n\n    const submitReg = (e) => {\n        e.preventDefault()\n        setUser({\n            username: e.target.value,\n            fullname: e.target.value,\n            email: e.target.value,\n            password: e.target.value,\n        });\n        AuthService.register(user).then(data=>{\n            const { message } = data;\n            setMessage(message);\n            clearForm();\n            if(!message.errorMessage){\n                timerID = setTimeout(()=>{\n                props.history.push('/login');\n            },2500)\n            }\n        }) \n    }\n    \n    return(\n        <div>\n            <form action=\"\" method=\"post\" onSubmit={submitReg} className=\"col-md-8 offset-md-2\">\n                <h1 className=\"form-group page-header\">Register</h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\" placeholder=\"Enter username\" value={user.username||\"\"} onChange={e => setUser({...user, username: e.target.value})} name=\"username\" id=\"username\" className=\"form-control\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"fullname\">Full Name</label>\n                    <input type=\"text\" placeholder=\"Enter full name\" value={user.fullname||\"\"} onChange={e => setUser({...user, fullname: e.target.value})} name=\"fullname\" id=\"full-name\" className=\"form-control\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" placeholder=\"Enter email\" value={user.email||\"\"} onChange={e => setUser({...user, email: e.target.value})} name=\"email\" id=\"email\" className=\"form-control\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" placeholder=\"Enter password\" value={user.password||\"\"} onChange={e => setUser({...user, password: e.target.value})} name=\"password\" id=\"password\" className=\"form-control\" required></input>\n                </div>\n                <button type=\"submit\" className=\"btn btn-warning\">Register</button>\n            </form>\n            {message ? <Message message={message}/> : null}\n        </div>\n    )\n}\n\nexport default Register;","import React, { useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext'\n\nfunction Home () {\n    const {isAuthenticated} = useContext(AuthContext)\n\n    const authButtons = () => {\n        return (\n        <div className=\"d-flex\">\n            <Link to=\"/login\">\n                <button type=\"button\" className=\"btn btn-warning home-btn\">Login</button>\n            </Link>\n            <Link to=\"/register\">\n                <button type=\"button\" className=\"btn btn-warning home-btn\">Register</button>\n            </Link>\n        </div>\n        )\n    }\n\n    return(\n        <div className=\"home-container\">\n            <h1 className=\"home-item\"><strong>Covid Conscious</strong></h1>\n            <h4 className=\"home-item\">Keep a log. Stay on top of your risk</h4>\n            <div className=\"d-flex\">\n                {!isAuthenticated ? authButtons() : null}\n            </div>\n            <div className=\"elfsight-app-4bfe4b25-9e78-4673-836b-f6dfb62163e1 widget\"></div>\n        </div>\n        \n        \n    )\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { useHistory} from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport subDays from \"date-fns/subDays\"\n\nfunction AddLog() {\n    const [fullLog, setFullLog] = useState({\n        logDate: new Date(),\n        location: '',\n        duration: 0,\n        interactions: 0\n    })\n\n    let history = useHistory()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setFullLog({\n            location: e.target.value,\n            logDate: e.target.selected,\n            duration: e.target.value,\n            interactions: e.target.value\n        })\n        console.log(fullLog)\n        axios.post('https://covid-conscious.herokuapp.com/user/covidlog/add', fullLog)\n            .then(res => console.log(res.data))\n        e.target.reset()\n        history.push('/loglist')\n        history.go(0)\n    }\n\n    return(\n        <div>\n            <form action=\"\" className=\"col-md-8 offset-md-2\" method=\"post\" onSubmit={handleSubmit}>\n                <h1 className=\"form-group add-log-header\">Add New Activities Log</h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"log-location\">Location</label>\n                    <input type=\"text\" placeholder=\"Enter location\" name=\"location\" value={fullLog.location||\"\"} onChange={e => setFullLog({...fullLog, location: e.target.value})} id=\"log-location\" className=\"form-control\" required></input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"date-of-log\">Date</label>\n                    <DatePicker selected={fullLog.logDate||new Date()} name=\"logDate\" onChange={date => setFullLog({...fullLog, logDate:date})} id=\"date-of-log\" className=\"form-control\" maxDate={new Date()} minDate={subDays(new Date(), 14)} required/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"duration\">Time spent at location(minutes)</label>\n                    <input type=\"number\" placeholder =\"Enter time spent\" id=\"duration\" name=\"duration\" className=\"form-control\" value={fullLog.duration||\"\"} onChange={e => setFullLog({...fullLog, duration: e.target.value})} required></input>\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"interactions\">Interactions within 6 feet</label>\n                <input type=\"number\" placeholder=\"Enter number\" id=\"interactions\" name=\"interactions\" className=\"form-control\" value={fullLog.interactions||\"\"} onChange={e => setFullLog({...fullLog, interactions: e.target.value})} required></input>\n                </div>\n                <button type=\"submit\" className=\"btn btn-warning\">Add Log</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddLog;","export default {\n    getLogs: () => {\n        return fetch('https://covid-conscious.herokuapp.com/user/covidlog', \n            {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n             }\n          }\n            )\n            .then(res =>{\n                console.log(res)\n                if(res.status !== 401){\n                    return res.json().then(data => data);\n                }\n                else\n                    return {message : {messagBody : \"UnAuthorized\", errorMessage: true}};\n            });\n    },\n}","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\nimport {AuthContext} from '../context/AuthContext';\nimport LogService from '../services/LogService';\n\nfunction LogList() {\n    const [logTable, setLogTable] = useState([])\n    const GetContext = useContext(AuthContext)\n    let interactionsCount = useRef(0)\n    let history = useHistory()\n    \n\n    useEffect(()=>{\n        LogService.getLogs().then(data =>{\n            data.logs.sort((a, b) => a.logDate < b.logDate ? 1 : -1);\n            data.logs.forEach((log) => {\n                let d = new Date()\n                d.setDate(d.getDate() - 14)\n                if (log.logDate > d.toISOString()){\n                    interactionsCount.current += log.interactions\n                }                \n            })\n            setLogTable(data.logs);\n        });\n    },[interactionsCount]);\n\n    const deleteLog = (_id, e) => {\n        e.preventDefault()\n        setLogTable(logTable.filter((selected) => selected._id !== _id))\n        axios.delete('https://covid-conscious.herokuapp.com/user/covidlog/'+_id)\n            .then(res => console.log(res.data))\n        history.go(0)\n    }\n\n    return (\n        <div>\n            <h1 className=\"view-log-header\">View Log History</h1>\n            <h3 className=\"view-log-greeting\">Hello {GetContext.user.username},</h3>\n            <div className=\"d-flex flex-wrap\">\n                <p className=\"counter col-md-7\">You've come within 6 feet of {interactionsCount.current} people in the last 14 days</p>\n                <Link to=\"/addlog\">\n                    <button type=\"button\" className=\"btn btn-warning add-btn\">Add New Log</button>\n                </Link>\n            </div>\n            <table className=\"table table-hover text-center\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Duration (in minutes)</th>\n                        <th scope=\"col\"># of Interactions within 6 Feet</th>\n                        <th scope=\"col\">Delete Log</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        logTable.map(logs => { \n                                return (\n                                    <tr key={logs._id}>\n                                        <td>{logs.logDate.substring(0, 10)}</td>\n                                        <td>{logs.location}</td>\n                                        <td>{logs.duration}</td>\n                                        <td>{logs.interactions}</td>\n                                        <td>\n                                        <button className=\"btn btn-danger\" type=\"submit\" name=\"delete\" onClick={(e) => deleteLog(logs._id, e)}>Delete</button>\n                                        </td>\n                                    </tr>\n                                ) \n                            }\n                        )\n                    }\n                </tbody>\n            </table>\n\n        </div>\n\n\n    )\n}\n\nexport default LogList;","import React from 'react';\n\nconst CovidFaq = () => {\n    return(\n        <div className=\"col-md-10 offset-md-1\">\n            <h2 className=\"header\">About COVID-19</h2>\n            <p>The Coronavirus(COVID-19) is a devastating respiratory illness with fatal potential. \n            It mainly spreads through respiratory droplets which can be exchanged through close person-to-person interactions.\n            Actions such as sneezing, coughing, or just normal talking have the chance to transfer to individuals and infect them</p>\n\n            <p>The virus is at its highlest likelihood of transmission when people are within 6 feet of each other.\n            The virus can also be spread by people without symptoms, which is why mandatory measures have been instituted across the globe for citizens to wear masks in public.\n            If contracted, the virus typically incubates within people for 14 days.</p>\n            \n            <h2 className=\"header\">How Covid-Conscious Can Help</h2>\n            <p>\n            Outside of wearing a mask, the best thing we can do to combat the pandemic is be cognizant of our behavior and encourage others to do the same.\n            We need to work in unison to minimize the risk keep us, our loved ones, and the strangers around us free from Coronavirus.</p>\n            <p>Everybody should be staying inside to minimize their chance, but if you have to go out, it's smart keep a log of where you've been and how many people you've come in contact with.\n             That way, if you find out later that someone contracted Covid at a location you logged in the last 14 days, or you were the one to catch it, you know who to contact and that you need to get yourself tested. \n            Covid-Conscious allows you to create and save logs, and keeps track of how many people you've come in contact with in the last 14 days. \n            When you look back at how many people you've come in contact with in the last two weeks, and multiply that exponentially by how many people each one of those people has come in contact with, the potential for contact tracing is staggering.\n            That's why you need to keep track of your social activity. To know your risk and prevent things from getting out of hand.\n            </p>\n            <p>More COVID-19 information can be found on <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\" id=\"referral\" className=\"faq-link\">The Center for Disease Control's website</a> </p>\n        </div>\n    )\n}\n\nexport default CovidFaq;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst PublicRestricted = ({component: Component, ...rest}) => {\n    const { isAuthenticated } = useContext(AuthContext);\n    return(\n        <Route {...rest} render ={props => {\n            if(!isAuthenticated){\n                return <Redirect to={{ pathname: '/login', state: {from: props.location} }} />\n            }\n            return <Component {...props}/>\n        }} \n         />\n\n    )\n}\n\nexport default PublicRestricted;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst MemberRestricted = ({component: Component, ...rest}) => {\n    const { isAuthenticated } = useContext(AuthContext);\n    return (\n        <Route {...rest} render={props => {\n            if(isAuthenticated){\n                return <Redirect to={{ pathname: '/loglist', state: {from: props.location}}}/>\n            }\n            return <Component {...props} />\n        }}\n        />\n    )\n}\n\nexport default MemberRestricted;","import React from 'react';\nimport Navbar from './components/navbar';\nimport Login from './components/login';\nimport Register from './components/register';\nimport Home from './components/home';\nimport AddLog from './components/addLog';\nimport LogList from './components/LogList';\nimport CovidFaq from './components/CovidFAQ';\nimport PublicRestricted from './route-permissions/PublicRestricted';\nimport MemberRestricted from './route-permissions/MemberRestricted';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navbar/>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <MemberRestricted path=\"/register\" component={Register} />\n          <MemberRestricted path=\"/login\" component={Login} />\n          <PublicRestricted path=\"/loglist\" component={LogList} />\n          <PublicRestricted path=\"/addlog\" component={AddLog} />\n          <Route path=\"/addlog\" component={AddLog} />\n          <Route path=\"/loglist\" component={LogList} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/covidfaq\" component={CovidFaq} />\n        </Switch>\n        <div className=\"App\">\n          \n        </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AuthProvider from './context/AuthContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}